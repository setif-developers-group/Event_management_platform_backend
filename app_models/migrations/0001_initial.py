# Generated by Django 5.2.6 on 2025-09-25 13:59

import cloudinary.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
                ('attendance_type', models.CharField(choices=[('online', 'online'), ('on-site', 'on-site')], default='on-site', max_length=10)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('confirmed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UploadModeslByFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_model', models.CharField(choices=[('workshop', 'Workshops'), ('partner', 'Partners'), ('speaker', 'Speakers')], default='partner', max_length=20)),
                ('file', models.FileField(null=True, upload_to='')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('name',), name='unique_partner_name')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent', models.BooleanField(default=False)),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.registration')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_date', models.DateTimeField(auto_now_add=True)),
                ('certificate_file', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='certificate', to='app_models.registration')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateTimeField(auto_now_add=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='app_models.registration')),
            ],
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True, null=True)),
                ('image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_models.partner')),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
                ('duration', models.SmallIntegerField()),
                ('sessions', models.SmallIntegerField(default=1)),
                ('week', models.SmallIntegerField(default=1)),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workshops', to='app_models.partner')),
                ('speakers', models.ManyToManyField(blank=True, related_name='workshops', to='app_models.speaker')),
            ],
        ),
        migrations.AddField(
            model_name='registration',
            name='workshop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='app_models.workshop'),
        ),
        migrations.CreateModel(
            name='WorkshopCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_file', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.workshop')),
            ],
        ),
        migrations.AddConstraint(
            model_name='speaker',
            constraint=models.UniqueConstraint(fields=('name', 'bio'), name='unique_speaker_fullinfo'),
        ),
        migrations.AddConstraint(
            model_name='workshop',
            constraint=models.UniqueConstraint(fields=('title',), name='unique_workshop_title'),
        ),
        migrations.AddConstraint(
            model_name='registration',
            constraint=models.UniqueConstraint(fields=('email', 'workshop'), name='unique_email_workshop'),
        ),
    ]
